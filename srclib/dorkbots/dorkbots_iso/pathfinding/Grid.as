package com.dayvid.grid{	/**	 * Holds a two-dimensional array of Nodes methods to manipulate them, start node and end node for finding a path.	 */	public class Grid	{		private var _startNode:Node;		private var _endNode:Node;		private var _nodes:Array;		private var _numCols:uint;		private var _numRows:uint;		private var _totalNodes:uint;				/**		 * Constructor.		 */		public function Grid(numCols:uint, numRows:uint)		{			_numCols = numCols;			_numRows = numRows;			_totalNodes = numCols * _numRows;			_nodes = new Array();			var i:int = 0;			for(i; i < _numCols; i++)			{				_nodes[i] = new Array();				var j:int = 0;				for(j; j < _numRows; j++)				{					_nodes[i][j] = createNode(i, j);				}			}		}		//		protected function createNode(aX:int, aY:int):Node		{			return new Node(aX, aY);		}				////////////////////////////////////////		// public methods		////////////////////////////////////////				/**		 * Returns the node at the given coords.		 * @param x The x coord.		 * @param y The y coord.		 */		public function getNode(x:int, y:int):Node		{			return _nodes[x][y];		}				/**		 * Sets the node at the given coords as the end node.		 * @param x The x coord.		 * @param y The y coord.		 */		public function setEndNode(x:int, y:int):void		{			_endNode = _nodes[x][y];			//_endNode = _nodes[x][y] as Node;		}				/**		 * Sets the node at the given coords as the start node.		 * @param x The x coord.		 * @param y The y coord.		 */		public function setStartNode(x:int, y:int):void		{			_startNode = _nodes[x][y];			//_startNode = _nodes[x][y] as Node;		}				/**		 * Sets the node at the given coords as walkable or not.		 * @param x The x coord.		 * @param y The y coord.		 */		public function setWalkable(x:int, y:int, value:Boolean):void		{			_nodes[x][y].walkable = value;		}								////////////////////////////////////////		// getters / setters		////////////////////////////////////////				/**		 * Returns the end node.		 */		public function get endNode():Node		{			return _endNode;		}				/**		 * Returns the number of columns in the grid.		 */		public function get numCols():int		{			return _numCols;		}				/**		 * Returns the number of rows in the grid.		 */		public function get numRows():int		{			return _numRows;		}				public function get totalNodes():uint		{			return _totalNodes;		}				/**		 * Returns the start node.		 */		public function get startNode():Node		{			return _startNode;		}		//		public function cleanUp():void		{			var i:int = 0;			for(i; i < _nodes.length; i++)			{				var j:int = 0;				for(j; j < _numRows; j++)				{					_nodes[i][j].cleanUp();				}				_nodes[i].length = 0;				_nodes[i] = null;			}			 _nodes.length = 0;			 _nodes = null;		}	}}